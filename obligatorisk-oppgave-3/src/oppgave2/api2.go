package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"html/template"
)

type AutoGenerated struct {
	Month      string `json:"month"`
	Num        int    `json:"num"`
	Link       string `json:"link"`
	Year       string `json:"year"`
	News       string `json:"news"`
	SafeTitle  string `json:"safe_title"`
	Transcript string `json:"transcript"`
	Alt        string `json:"alt"`
	Img        string `json:"img"`
	Title      string `json:"title"`
	Day        string `json:"day"`
}

type PageData struct {
	PageTitle string
	PokemonListe     string
}

func main() {
	response, err := http.Get("https://xkcd.com/info.0.json")
	if err != nil {
		fmt.Print(err.Error())
		os.Exit(1)
	}

	responseData, err := ioutil.ReadAll(response.Body)
	if err != nil {
		log.Fatal(err)
	}

	var responseObject AutoGenerated
	json.Unmarshal(responseData, &responseObject)
	fmt.Println("Latest Comic: ")
	fmt.Println("title: ",responseObject.SafeTitle)
	fmt.Println("image url: ",responseObject.Img)
	fmt.Println("year: ",responseObject.Year)
	fmt.Println("month: ",responseObject.Month)
	fmt.Println("day: ",responseObject.Day)

	tmpl := template.Must(template.ParseFiles("index.html"))

	http.HandleFunc("/2/", func(w http.ResponseWriter, r *http.Request) {
		data := PageData {
			PageTitle: "API 2",
		}
		tmpl.Execute(w, data)
	})

	http.ListenAndServe(":80", nil)
}